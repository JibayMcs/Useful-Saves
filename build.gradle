buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        //classpath "com.github.jengelman.gradle.plugins:shadow:1.2.4"
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//apply plugin: "com.github.johnrengelman.shadow"

version = '0.1.1-1.12.2-14.23.5.2768'
group = 'fr.zeamateis.usefulsaves'
archivesBaseName = 'usefulsaves'

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.2'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

/*shadowJar {
    configurations = [project.configurations.shadow]
    manifest {
        attributes([
                "Specification-Title"     : archivesBaseName,
                "Specification-Vendor"    : "ZeAmateis",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "zeamateis",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Built-By'                : System.properties['user.name'],
                'Created-By'              : "Gradle ${gradle.gradleVersion}",
                'Build-Jdk'               : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS'                : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
        ])
    }
    exclude("tests/**")
    classifier ''
}*/

/**
 * Export langs files for resources pack makers, if client doesn't have mod installed
 * */
task zippingLang(type: Zip) {
    from sourceSets.main.resources
    exclude 'META-INF'
    exclude("pack.mcmeta")
    archiveName 'useful-saves-translations-pack.zip'
    destinationDir(file("$buildDir/libs/"))
}

tasks.build.dependsOn zippingLang